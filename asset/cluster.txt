ItemSet {
<Program> := 。 <start> peek: #
<start> := 。 <external_declaration> <start> peek: #
<start> := 。 @empty peek: #
<external_declaration> := 。 <function_definition> peek: $double
<external_declaration> := 。 <function_definition> peek: $char
<external_declaration> := 。 <function_definition> peek: $int
<external_declaration> := 。 <function_definition> peek: #
<external_declaration> := 。 <declaration> peek: $double
<external_declaration> := 。 <declaration> peek: $char
<external_declaration> := 。 <declaration> peek: $int
<external_declaration> := 。 <declaration> peek: #
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: #
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: #
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<type_specifier> := $char 。 peek: $id
}
ItemSet {
<type_specifier> := $double 。 peek: $id
}
ItemSet {
<type_specifier> := $int 。 peek: $id
}
ItemSet {
<external_declaration> := <declaration> 。 peek: $double
<external_declaration> := <declaration> 。 peek: $char
<external_declaration> := <declaration> 。 peek: $int
<external_declaration> := <declaration> 。 peek: #
}
ItemSet {
<start> := <external_declaration> 。 <start> peek: #
<start> := 。 <external_declaration> <start> peek: #
<start> := 。 @empty peek: #
<external_declaration> := 。 <function_definition> peek: $double
<external_declaration> := 。 <function_definition> peek: $char
<external_declaration> := 。 <function_definition> peek: $int
<external_declaration> := 。 <function_definition> peek: #
<external_declaration> := 。 <declaration> peek: $double
<external_declaration> := 。 <declaration> peek: $char
<external_declaration> := 。 <declaration> peek: $int
<external_declaration> := 。 <declaration> peek: #
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := 。 <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: #
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: #
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<function_definition> := <function> 。 <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := <function> 。 <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := <function> 。 <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := <function> 。 <type_specifier> $id $( <function_declaration_list> $) <compound_statement> peek: #
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<external_declaration> := <function_definition> 。 peek: $double
<external_declaration> := <function_definition> 。 peek: $char
<external_declaration> := <function_definition> 。 peek: $int
<external_declaration> := <function_definition> 。 peek: #
}
ItemSet {
<Program> := <start> 。 peek: #
}
ItemSet {
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: #
<declaration_init> := 。 $id <declaration_assign> peek: $,
<declaration_init> := 。 $id <declaration_assign> peek: $;
}
ItemSet {
<start> := @empty 。 peek: #
}
ItemSet {
<start> := <external_declaration> <start> 。 peek: #
}
ItemSet {
<function_definition> := <function> <type_specifier> 。 $id $( <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := <function> <type_specifier> 。 $id $( <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := <function> <type_specifier> 。 $id $( <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := <function> <type_specifier> 。 $id $( <function_declaration_list> $) <compound_statement> peek: #
}
ItemSet {
<declaration_init> := $id 。 <declaration_assign> peek: $,
<declaration_init> := $id 。 <declaration_assign> peek: $;
<declaration_assign> := 。 $= <expression> peek: $,
<declaration_assign> := 。 @empty peek: $,
<declaration_assign> := 。 $= <expression> peek: $;
<declaration_assign> := 。 @empty peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $double
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $char
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $int
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: #
<declaration_init_list> := 。 $, <declaration_init> <declaration_init_list> peek: $;
<declaration_init_list> := 。 @empty peek: $;
}
ItemSet {
<function_definition> := <function> <type_specifier> $id 。 $( <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := <function> <type_specifier> $id 。 $( <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := <function> <type_specifier> $id 。 $( <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := <function> <type_specifier> $id 。 $( <function_declaration_list> $) <compound_statement> peek: #
}
ItemSet {
<declaration_assign> := $= 。 <expression> peek: $,
<declaration_assign> := $= 。 <expression> peek: $;
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<declaration_init> := $id <declaration_assign> 。 peek: $,
<declaration_init> := $id <declaration_assign> 。 peek: $;
}
ItemSet {
<declaration_assign> := @empty 。 peek: $,
<declaration_assign> := @empty 。 peek: $;
}
ItemSet {
<declaration_init_list> := $, 。 <declaration_init> <declaration_init_list> peek: $;
<declaration_init> := 。 $id <declaration_assign> peek: $,
<declaration_init> := 。 $id <declaration_assign> peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $double
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $char
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $int
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: #
}
ItemSet {
<declaration_init_list> := @empty 。 peek: $;
}
ItemSet {
<function_definition> := <function> <type_specifier> $id $( 。 <function_declaration_list> $) <compound_statement> peek: $double
<function_definition> := <function> <type_specifier> $id $( 。 <function_declaration_list> $) <compound_statement> peek: $char
<function_definition> := <function> <type_specifier> $id $( 。 <function_declaration_list> $) <compound_statement> peek: $int
<function_definition> := <function> <type_specifier> $id $( 。 <function_declaration_list> $) <compound_statement> peek: #
<function_declaration_list> := 。 <function_declaration> <function_declaration_suffix> peek: $)
<function_declaration_list> := 。 @empty peek: $)
<function_declaration> := 。 <type_specifier> $id peek: $,
<function_declaration> := 。 <type_specifier> $id peek: $)
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<primary_expression> := $( 。 <expression> $) peek: $+
<primary_expression> := $( 。 <expression> $) peek: $-
<primary_expression> := $( 。 <expression> $) peek: $*
<primary_expression> := $( 。 <expression> $) peek: $/
<primary_expression> := $( 。 <expression> $) peek: $%
<primary_expression> := $( 。 <expression> $) peek: $<
<primary_expression> := $( 。 <expression> $) peek: $>
<primary_expression> := $( 。 <expression> $) peek: $id
<primary_expression> := $( 。 <expression> $) peek: $num
<primary_expression> := $( 。 <expression> $) peek: $(
<primary_expression> := $( 。 <expression> $) peek: $,
<primary_expression> := $( 。 <expression> $) peek: $;
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<primary_expression> := $id 。 peek: $+
<primary_expression> := $id 。 peek: $-
<primary_expression> := $id 。 peek: $*
<primary_expression> := $id 。 peek: $/
<primary_expression> := $id 。 peek: $%
<primary_expression> := $id 。 peek: $<
<primary_expression> := $id 。 peek: $>
<primary_expression> := $id 。 peek: $id
<primary_expression> := $id 。 peek: $num
<primary_expression> := $id 。 peek: $(
<primary_expression> := $id 。 peek: $,
<primary_expression> := $id 。 peek: $;
}
ItemSet {
<primary_expression> := $num 。 peek: $+
<primary_expression> := $num 。 peek: $-
<primary_expression> := $num 。 peek: $*
<primary_expression> := $num 。 peek: $/
<primary_expression> := $num 。 peek: $%
<primary_expression> := $num 。 peek: $<
<primary_expression> := $num 。 peek: $>
<primary_expression> := $num 。 peek: $id
<primary_expression> := $num 。 peek: $num
<primary_expression> := $num 。 peek: $(
<primary_expression> := $num 。 peek: $,
<primary_expression> := $num 。 peek: $;
}
ItemSet {
<expression> := <constant_expression> 。 peek: $,
<expression> := <constant_expression> 。 peek: $;
}
ItemSet {
<declaration_assign> := $= <expression> 。 peek: $,
<declaration_assign> := $= <expression> 。 peek: $;
}
ItemSet {
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $,
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $;
}
ItemSet {
<expression> := <function_expression> 。 peek: $,
<expression> := <function_expression> 。 peek: $;
}
ItemSet {
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $,
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<declaration_init_list> := $, <declaration_init> 。 <declaration_init_list> peek: $;
<declaration_init_list> := 。 $, <declaration_init> <declaration_init_list> peek: $;
<declaration_init_list> := 。 @empty peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $double
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $char
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $int
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: #
}
ItemSet {
<function_declaration_list> := <function_declaration> 。 <function_declaration_suffix> peek: $)
<function_declaration_suffix> := 。 $, <function_declaration> <function_declaration_suffix> peek: $)
<function_declaration_suffix> := 。 @empty peek: $)
}
ItemSet {
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> 。 $) <compound_statement> peek: $double
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> 。 $) <compound_statement> peek: $char
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> 。 $) <compound_statement> peek: $int
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> 。 $) <compound_statement> peek: #
}
ItemSet {
<function_declaration> := <type_specifier> 。 $id peek: $,
<function_declaration> := <type_specifier> 。 $id peek: $)
}
ItemSet {
<function_declaration_list> := @empty 。 peek: $)
}
ItemSet {
<primary_expression> := $( 。 <expression> $) peek: $+
<primary_expression> := $( 。 <expression> $) peek: $-
<primary_expression> := $( 。 <expression> $) peek: $*
<primary_expression> := $( 。 <expression> $) peek: $/
<primary_expression> := $( 。 <expression> $) peek: $%
<primary_expression> := $( 。 <expression> $) peek: $<
<primary_expression> := $( 。 <expression> $) peek: $>
<primary_expression> := $( 。 <expression> $) peek: $id
<primary_expression> := $( 。 <expression> $) peek: $num
<primary_expression> := $( 。 <expression> $) peek: $(
<primary_expression> := $( 。 <expression> $) peek: $)
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<primary_expression> := $id 。 peek: $+
<primary_expression> := $id 。 peek: $-
<primary_expression> := $id 。 peek: $*
<primary_expression> := $id 。 peek: $/
<primary_expression> := $id 。 peek: $%
<primary_expression> := $id 。 peek: $<
<primary_expression> := $id 。 peek: $>
<primary_expression> := $id 。 peek: $id
<primary_expression> := $id 。 peek: $num
<primary_expression> := $id 。 peek: $(
<primary_expression> := $id 。 peek: $)
}
ItemSet {
<primary_expression> := $num 。 peek: $+
<primary_expression> := $num 。 peek: $-
<primary_expression> := $num 。 peek: $*
<primary_expression> := $num 。 peek: $/
<primary_expression> := $num 。 peek: $%
<primary_expression> := $num 。 peek: $<
<primary_expression> := $num 。 peek: $>
<primary_expression> := $num 。 peek: $id
<primary_expression> := $num 。 peek: $num
<primary_expression> := $num 。 peek: $(
<primary_expression> := $num 。 peek: $)
}
ItemSet {
<expression> := <constant_expression> 。 peek: $)
}
ItemSet {
<primary_expression> := $( <expression> 。 $) peek: $+
<primary_expression> := $( <expression> 。 $) peek: $-
<primary_expression> := $( <expression> 。 $) peek: $*
<primary_expression> := $( <expression> 。 $) peek: $/
<primary_expression> := $( <expression> 。 $) peek: $%
<primary_expression> := $( <expression> 。 $) peek: $<
<primary_expression> := $( <expression> 。 $) peek: $>
<primary_expression> := $( <expression> 。 $) peek: $id
<primary_expression> := $( <expression> 。 $) peek: $num
<primary_expression> := $( <expression> 。 $) peek: $(
<primary_expression> := $( <expression> 。 $) peek: $,
<primary_expression> := $( <expression> 。 $) peek: $;
}
ItemSet {
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $)
}
ItemSet {
<expression> := <function_expression> 。 peek: $)
}
ItemSet {
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $,
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $;
}
ItemSet {
<operator> := $% 。 peek: $,
<operator> := $% 。 peek: $id
<operator> := $% 。 peek: $num
<operator> := $% 。 peek: $(
<operator> := $% 。 peek: $;
}
ItemSet {
<operator> := $* 。 peek: $,
<operator> := $* 。 peek: $id
<operator> := $* 。 peek: $num
<operator> := $* 。 peek: $(
<operator> := $* 。 peek: $;
}
ItemSet {
<operator> := $+ 。 peek: $,
<operator> := $+ 。 peek: $id
<operator> := $+ 。 peek: $num
<operator> := $+ 。 peek: $(
<operator> := $+ 。 peek: $;
}
ItemSet {
<operator> := $- 。 peek: $,
<operator> := $- 。 peek: $id
<operator> := $- 。 peek: $num
<operator> := $- 。 peek: $(
<operator> := $- 。 peek: $;
}
ItemSet {
<operator> := $/ 。 peek: $,
<operator> := $/ 。 peek: $id
<operator> := $/ 。 peek: $num
<operator> := $/ 。 peek: $(
<operator> := $/ 。 peek: $;
}
ItemSet {
<operator> := $< 。 peek: $,
<operator> := $< 。 peek: $id
<operator> := $< 。 peek: $num
<operator> := $< 。 peek: $(
<operator> := $< 。 peek: $;
}
ItemSet {
<operator> := $> 。 peek: $,
<operator> := $> 。 peek: $id
<operator> := $> 。 peek: $num
<operator> := $> 。 peek: $(
<operator> := $> 。 peek: $;
}
ItemSet {
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $,
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<arithmetic_expression> := <operator> 。 peek: $,
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := <operator> 。 peek: $;
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $,
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<arithmetic_expression> := @empty 。 peek: $,
<arithmetic_expression> := @empty 。 peek: $;
}
ItemSet {
<declaration_init_list> := $, <declaration_init> <declaration_init_list> 。 peek: $;
}
ItemSet {
<function_declaration_suffix> := $, 。 <function_declaration> <function_declaration_suffix> peek: $)
<function_declaration> := 。 <type_specifier> $id peek: $,
<function_declaration> := 。 <type_specifier> $id peek: $)
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<function_declaration_list> := <function_declaration> <function_declaration_suffix> 。 peek: $)
}
ItemSet {
<function_declaration_suffix> := @empty 。 peek: $)
}
ItemSet {
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) 。 <compound_statement> peek: $double
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) 。 <compound_statement> peek: $char
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) 。 <compound_statement> peek: $int
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) 。 <compound_statement> peek: #
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: #
}
ItemSet {
<function_declaration> := <type_specifier> $id 。 peek: $,
<function_declaration> := <type_specifier> $id 。 peek: $)
}
ItemSet {
<primary_expression> := $( <expression> 。 $) peek: $+
<primary_expression> := $( <expression> 。 $) peek: $-
<primary_expression> := $( <expression> 。 $) peek: $*
<primary_expression> := $( <expression> 。 $) peek: $/
<primary_expression> := $( <expression> 。 $) peek: $%
<primary_expression> := $( <expression> 。 $) peek: $<
<primary_expression> := $( <expression> 。 $) peek: $>
<primary_expression> := $( <expression> 。 $) peek: $id
<primary_expression> := $( <expression> 。 $) peek: $num
<primary_expression> := $( <expression> 。 $) peek: $(
<primary_expression> := $( <expression> 。 $) peek: $)
}
ItemSet {
<primary_expression> := $( <expression> $) 。 peek: $+
<primary_expression> := $( <expression> $) 。 peek: $-
<primary_expression> := $( <expression> $) 。 peek: $*
<primary_expression> := $( <expression> $) 。 peek: $/
<primary_expression> := $( <expression> $) 。 peek: $%
<primary_expression> := $( <expression> $) 。 peek: $<
<primary_expression> := $( <expression> $) 。 peek: $>
<primary_expression> := $( <expression> $) 。 peek: $id
<primary_expression> := $( <expression> $) 。 peek: $num
<primary_expression> := $( <expression> $) 。 peek: $(
<primary_expression> := $( <expression> $) 。 peek: $,
<primary_expression> := $( <expression> $) 。 peek: $;
}
ItemSet {
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $)
}
ItemSet {
<operator> := $% 。 peek: $)
<operator> := $% 。 peek: $id
<operator> := $% 。 peek: $num
<operator> := $% 。 peek: $(
}
ItemSet {
<operator> := $* 。 peek: $)
<operator> := $* 。 peek: $id
<operator> := $* 。 peek: $num
<operator> := $* 。 peek: $(
}
ItemSet {
<operator> := $+ 。 peek: $)
<operator> := $+ 。 peek: $id
<operator> := $+ 。 peek: $num
<operator> := $+ 。 peek: $(
}
ItemSet {
<operator> := $- 。 peek: $)
<operator> := $- 。 peek: $id
<operator> := $- 。 peek: $num
<operator> := $- 。 peek: $(
}
ItemSet {
<operator> := $/ 。 peek: $)
<operator> := $/ 。 peek: $id
<operator> := $/ 。 peek: $num
<operator> := $/ 。 peek: $(
}
ItemSet {
<operator> := $< 。 peek: $)
<operator> := $< 。 peek: $id
<operator> := $< 。 peek: $num
<operator> := $< 。 peek: $(
}
ItemSet {
<operator> := $> 。 peek: $)
<operator> := $> 。 peek: $id
<operator> := $> 。 peek: $num
<operator> := $> 。 peek: $(
}
ItemSet {
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> 。 peek: $)
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<arithmetic_expression> := @empty 。 peek: $)
}
ItemSet {
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $,
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $;
<expression_list> := 。 <expression> <expression_profix> peek: $)
<expression_list> := 。 @empty peek: $)
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $,
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $,
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<function_declaration_suffix> := $, <function_declaration> 。 <function_declaration_suffix> peek: $)
<function_declaration_suffix> := 。 $, <function_declaration> <function_declaration_suffix> peek: $)
<function_declaration_suffix> := 。 @empty peek: $)
}
ItemSet {
<compound_statement> := ${ 。 <statement_list> $} peek: $double
<compound_statement> := ${ 。 <statement_list> $} peek: $char
<compound_statement> := ${ 。 <statement_list> $} peek: $int
<compound_statement> := ${ 。 <statement_list> $} peek: #
<statement_list> := 。 <statement> <statement_list> peek: $}
<statement_list> := 。 @empty peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $double
<statement> := 。 <declaration> peek: $char
<statement> := 。 <declaration> peek: $int
<statement> := 。 <declaration> peek: $id
<statement> := 。 <declaration> peek: $;
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <declaration> peek: $break
<statement> := 。 <declaration> peek: $return
<statement> := 。 <declaration> peek: $if
<statement> := 。 <declaration> peek: $while
<statement> := 。 <declaration> peek: $for
<statement> := 。 <declaration> peek: ${
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> 。 peek: $double
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> 。 peek: $char
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> 。 peek: $int
<function_definition> := <function> <type_specifier> $id $( <function_declaration_list> $) <compound_statement> 。 peek: #
}
ItemSet {
<primary_expression> := $( <expression> $) 。 peek: $+
<primary_expression> := $( <expression> $) 。 peek: $-
<primary_expression> := $( <expression> $) 。 peek: $*
<primary_expression> := $( <expression> $) 。 peek: $/
<primary_expression> := $( <expression> $) 。 peek: $%
<primary_expression> := $( <expression> $) 。 peek: $<
<primary_expression> := $( <expression> $) 。 peek: $>
<primary_expression> := $( <expression> $) 。 peek: $id
<primary_expression> := $( <expression> $) 。 peek: $num
<primary_expression> := $( <expression> $) 。 peek: $(
<primary_expression> := $( <expression> $) 。 peek: $)
}
ItemSet {
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $)
<expression_list> := 。 <expression> <expression_profix> peek: $)
<expression_list> := 。 @empty peek: $)
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<primary_expression> := $( 。 <expression> $) peek: $+
<primary_expression> := $( 。 <expression> $) peek: $-
<primary_expression> := $( 。 <expression> $) peek: $*
<primary_expression> := $( 。 <expression> $) peek: $/
<primary_expression> := $( 。 <expression> $) peek: $%
<primary_expression> := $( 。 <expression> $) peek: $<
<primary_expression> := $( 。 <expression> $) peek: $>
<primary_expression> := $( 。 <expression> $) peek: $id
<primary_expression> := $( 。 <expression> $) peek: $num
<primary_expression> := $( 。 <expression> $) peek: $(
<primary_expression> := $( 。 <expression> $) peek: $,
<primary_expression> := $( 。 <expression> $) peek: $)
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<primary_expression> := $id 。 peek: $+
<primary_expression> := $id 。 peek: $-
<primary_expression> := $id 。 peek: $*
<primary_expression> := $id 。 peek: $/
<primary_expression> := $id 。 peek: $%
<primary_expression> := $id 。 peek: $<
<primary_expression> := $id 。 peek: $>
<primary_expression> := $id 。 peek: $id
<primary_expression> := $id 。 peek: $num
<primary_expression> := $id 。 peek: $(
<primary_expression> := $id 。 peek: $,
<primary_expression> := $id 。 peek: $)
}
ItemSet {
<primary_expression> := $num 。 peek: $+
<primary_expression> := $num 。 peek: $-
<primary_expression> := $num 。 peek: $*
<primary_expression> := $num 。 peek: $/
<primary_expression> := $num 。 peek: $%
<primary_expression> := $num 。 peek: $<
<primary_expression> := $num 。 peek: $>
<primary_expression> := $num 。 peek: $id
<primary_expression> := $num 。 peek: $num
<primary_expression> := $num 。 peek: $(
<primary_expression> := $num 。 peek: $,
<primary_expression> := $num 。 peek: $)
}
ItemSet {
<expression> := <constant_expression> 。 peek: $,
<expression> := <constant_expression> 。 peek: $)
}
ItemSet {
<expression_list> := <expression> 。 <expression_profix> peek: $)
<expression_profix> := 。 $, <expression> <expression_profix> peek: $)
<expression_profix> := 。 @empty peek: $)
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $,
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $;
}
ItemSet {
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $,
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $)
}
ItemSet {
<expression> := <function_expression> 。 peek: $,
<expression> := <function_expression> 。 peek: $)
}
ItemSet {
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $,
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<expression_list> := @empty 。 peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $,
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<function_declaration_suffix> := $, <function_declaration> <function_declaration_suffix> 。 peek: $)
}
ItemSet {
<jump_statement> := $break 。 $; peek: $double
<jump_statement> := $break 。 $; peek: $char
<jump_statement> := $break 。 $; peek: $int
<jump_statement> := $break 。 $; peek: $id
<jump_statement> := $break 。 $; peek: $;
<jump_statement> := $break 。 $; peek: $continue
<jump_statement> := $break 。 $; peek: $break
<jump_statement> := $break 。 $; peek: $return
<jump_statement> := $break 。 $; peek: $if
<jump_statement> := $break 。 $; peek: $while
<jump_statement> := $break 。 $; peek: $for
<jump_statement> := $break 。 $; peek: ${
<jump_statement> := $break 。 $; peek: $}
}
ItemSet {
<jump_statement> := $continue 。 $; peek: $double
<jump_statement> := $continue 。 $; peek: $char
<jump_statement> := $continue 。 $; peek: $int
<jump_statement> := $continue 。 $; peek: $id
<jump_statement> := $continue 。 $; peek: $;
<jump_statement> := $continue 。 $; peek: $continue
<jump_statement> := $continue 。 $; peek: $break
<jump_statement> := $continue 。 $; peek: $return
<jump_statement> := $continue 。 $; peek: $if
<jump_statement> := $continue 。 $; peek: $while
<jump_statement> := $continue 。 $; peek: $for
<jump_statement> := $continue 。 $; peek: ${
<jump_statement> := $continue 。 $; peek: $}
}
ItemSet {
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
}
ItemSet {
<assignment_expression> := $id 。 <assignment_operator> <expression> peek: $,
<assignment_expression> := $id 。 <assignment_operator> <expression> peek: $;
<assignment_operator> := 。 $= peek: $id
<assignment_operator> := 。 $= peek: $num
<assignment_operator> := 。 $= peek: $(
}
ItemSet {
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $}
}
ItemSet {
<jump_statement> := $return 。 <expression> $; peek: $double
<jump_statement> := $return 。 <expression> $; peek: $char
<jump_statement> := $return 。 <expression> $; peek: $int
<jump_statement> := $return 。 <expression> $; peek: $id
<jump_statement> := $return 。 <expression> $; peek: $;
<jump_statement> := $return 。 <expression> $; peek: $continue
<jump_statement> := $return 。 <expression> $; peek: $break
<jump_statement> := $return 。 <expression> $; peek: $return
<jump_statement> := $return 。 <expression> $; peek: $if
<jump_statement> := $return 。 <expression> $; peek: $while
<jump_statement> := $return 。 <expression> $; peek: $for
<jump_statement> := $return 。 <expression> $; peek: ${
<jump_statement> := $return 。 <expression> $; peek: $}
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $double
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $char
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $int
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $id
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $;
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $continue
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $break
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $return
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $if
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $while
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $for
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: ${
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $}
}
ItemSet {
<compound_statement> := ${ 。 <statement_list> $} peek: $double
<compound_statement> := ${ 。 <statement_list> $} peek: $char
<compound_statement> := ${ 。 <statement_list> $} peek: $int
<compound_statement> := ${ 。 <statement_list> $} peek: $id
<compound_statement> := ${ 。 <statement_list> $} peek: $;
<compound_statement> := ${ 。 <statement_list> $} peek: $continue
<compound_statement> := ${ 。 <statement_list> $} peek: $break
<compound_statement> := ${ 。 <statement_list> $} peek: $return
<compound_statement> := ${ 。 <statement_list> $} peek: $if
<compound_statement> := ${ 。 <statement_list> $} peek: $while
<compound_statement> := ${ 。 <statement_list> $} peek: $for
<compound_statement> := ${ 。 <statement_list> $} peek: ${
<compound_statement> := ${ 。 <statement_list> $} peek: $}
<statement_list> := 。 <statement> <statement_list> peek: $}
<statement_list> := 。 @empty peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $double
<statement> := 。 <declaration> peek: $char
<statement> := 。 <declaration> peek: $int
<statement> := 。 <declaration> peek: $id
<statement> := 。 <declaration> peek: $;
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <declaration> peek: $break
<statement> := 。 <declaration> peek: $return
<statement> := 。 <declaration> peek: $if
<statement> := 。 <declaration> peek: $while
<statement> := 。 <declaration> peek: $for
<statement> := 。 <declaration> peek: ${
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<assignment_expression_list> := <assignment_expression> 。 <assignment_expression_profix> peek: $;
<assignment_expression_profix> := 。 $, <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_profix> := 。 @empty peek: $;
}
ItemSet {
<expression_statement> := <assignment_expression_list> 。 $; peek: $double
<expression_statement> := <assignment_expression_list> 。 $; peek: $char
<expression_statement> := <assignment_expression_list> 。 $; peek: $int
<expression_statement> := <assignment_expression_list> 。 $; peek: $id
<expression_statement> := <assignment_expression_list> 。 $; peek: $;
<expression_statement> := <assignment_expression_list> 。 $; peek: $continue
<expression_statement> := <assignment_expression_list> 。 $; peek: $break
<expression_statement> := <assignment_expression_list> 。 $; peek: $return
<expression_statement> := <assignment_expression_list> 。 $; peek: $if
<expression_statement> := <assignment_expression_list> 。 $; peek: $while
<expression_statement> := <assignment_expression_list> 。 $; peek: $for
<expression_statement> := <assignment_expression_list> 。 $; peek: ${
<expression_statement> := <assignment_expression_list> 。 $; peek: $}
}
ItemSet {
<statement> := <compound_statement> 。 peek: $double
<statement> := <compound_statement> 。 peek: $char
<statement> := <compound_statement> 。 peek: $int
<statement> := <compound_statement> 。 peek: $id
<statement> := <compound_statement> 。 peek: $;
<statement> := <compound_statement> 。 peek: $continue
<statement> := <compound_statement> 。 peek: $break
<statement> := <compound_statement> 。 peek: $return
<statement> := <compound_statement> 。 peek: $if
<statement> := <compound_statement> 。 peek: $while
<statement> := <compound_statement> 。 peek: $for
<statement> := <compound_statement> 。 peek: ${
<statement> := <compound_statement> 。 peek: $}
}
ItemSet {
<statement> := <declaration> 。 peek: $double
<statement> := <declaration> 。 peek: $char
<statement> := <declaration> 。 peek: $int
<statement> := <declaration> 。 peek: $id
<statement> := <declaration> 。 peek: $;
<statement> := <declaration> 。 peek: $continue
<statement> := <declaration> 。 peek: $break
<statement> := <declaration> 。 peek: $return
<statement> := <declaration> 。 peek: $if
<statement> := <declaration> 。 peek: $while
<statement> := <declaration> 。 peek: $for
<statement> := <declaration> 。 peek: ${
<statement> := <declaration> 。 peek: $}
}
ItemSet {
<statement> := <expression_statement> 。 peek: $double
<statement> := <expression_statement> 。 peek: $char
<statement> := <expression_statement> 。 peek: $int
<statement> := <expression_statement> 。 peek: $id
<statement> := <expression_statement> 。 peek: $;
<statement> := <expression_statement> 。 peek: $continue
<statement> := <expression_statement> 。 peek: $break
<statement> := <expression_statement> 。 peek: $return
<statement> := <expression_statement> 。 peek: $if
<statement> := <expression_statement> 。 peek: $while
<statement> := <expression_statement> 。 peek: $for
<statement> := <expression_statement> 。 peek: ${
<statement> := <expression_statement> 。 peek: $}
}
ItemSet {
<statement> := <iteration_statement> 。 peek: $double
<statement> := <iteration_statement> 。 peek: $char
<statement> := <iteration_statement> 。 peek: $int
<statement> := <iteration_statement> 。 peek: $id
<statement> := <iteration_statement> 。 peek: $;
<statement> := <iteration_statement> 。 peek: $continue
<statement> := <iteration_statement> 。 peek: $break
<statement> := <iteration_statement> 。 peek: $return
<statement> := <iteration_statement> 。 peek: $if
<statement> := <iteration_statement> 。 peek: $while
<statement> := <iteration_statement> 。 peek: $for
<statement> := <iteration_statement> 。 peek: ${
<statement> := <iteration_statement> 。 peek: $}
}
ItemSet {
<statement> := <jump_statement> 。 peek: $double
<statement> := <jump_statement> 。 peek: $char
<statement> := <jump_statement> 。 peek: $int
<statement> := <jump_statement> 。 peek: $id
<statement> := <jump_statement> 。 peek: $;
<statement> := <jump_statement> 。 peek: $continue
<statement> := <jump_statement> 。 peek: $break
<statement> := <jump_statement> 。 peek: $return
<statement> := <jump_statement> 。 peek: $if
<statement> := <jump_statement> 。 peek: $while
<statement> := <jump_statement> 。 peek: $for
<statement> := <jump_statement> 。 peek: ${
<statement> := <jump_statement> 。 peek: $}
}
ItemSet {
<statement> := <selection_statement> 。 peek: $double
<statement> := <selection_statement> 。 peek: $char
<statement> := <selection_statement> 。 peek: $int
<statement> := <selection_statement> 。 peek: $id
<statement> := <selection_statement> 。 peek: $;
<statement> := <selection_statement> 。 peek: $continue
<statement> := <selection_statement> 。 peek: $break
<statement> := <selection_statement> 。 peek: $return
<statement> := <selection_statement> 。 peek: $if
<statement> := <selection_statement> 。 peek: $while
<statement> := <selection_statement> 。 peek: $for
<statement> := <selection_statement> 。 peek: ${
<statement> := <selection_statement> 。 peek: $}
}
ItemSet {
<statement_list> := <statement> 。 <statement_list> peek: $}
<statement_list> := 。 <statement> <statement_list> peek: $}
<statement_list> := 。 @empty peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $double
<statement> := 。 <declaration> peek: $char
<statement> := 。 <declaration> peek: $int
<statement> := 。 <declaration> peek: $id
<statement> := 。 <declaration> peek: $;
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <declaration> peek: $break
<statement> := 。 <declaration> peek: $return
<statement> := 。 <declaration> peek: $if
<statement> := 。 <declaration> peek: $while
<statement> := 。 <declaration> peek: $for
<statement> := 。 <declaration> peek: ${
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<compound_statement> := ${ <statement_list> 。 $} peek: $double
<compound_statement> := ${ <statement_list> 。 $} peek: $char
<compound_statement> := ${ <statement_list> 。 $} peek: $int
<compound_statement> := ${ <statement_list> 。 $} peek: #
}
ItemSet {
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $;
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $continue
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $break
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $return
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $if
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $while
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $for
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: ${
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $}
<declaration_init> := 。 $id <declaration_assign> peek: $,
<declaration_init> := 。 $id <declaration_assign> peek: $;
}
ItemSet {
<statement_list> := @empty 。 peek: $}
<assignment_expression_list> := @empty 。 peek: $;
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<primary_expression> := $( <expression> 。 $) peek: $+
<primary_expression> := $( <expression> 。 $) peek: $-
<primary_expression> := $( <expression> 。 $) peek: $*
<primary_expression> := $( <expression> 。 $) peek: $/
<primary_expression> := $( <expression> 。 $) peek: $%
<primary_expression> := $( <expression> 。 $) peek: $<
<primary_expression> := $( <expression> 。 $) peek: $>
<primary_expression> := $( <expression> 。 $) peek: $id
<primary_expression> := $( <expression> 。 $) peek: $num
<primary_expression> := $( <expression> 。 $) peek: $(
<primary_expression> := $( <expression> 。 $) peek: $,
<primary_expression> := $( <expression> 。 $) peek: $)
}
ItemSet {
<expression_profix> := $, 。 <expression> <expression_profix> peek: $)
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<expression_list> := <expression> <expression_profix> 。 peek: $)
}
ItemSet {
<expression_profix> := @empty 。 peek: $)
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $,
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $;
}
ItemSet {
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $,
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $)
}
ItemSet {
<operator> := $% 。 peek: $,
<operator> := $% 。 peek: $id
<operator> := $% 。 peek: $num
<operator> := $% 。 peek: $(
<operator> := $% 。 peek: $)
}
ItemSet {
<operator> := $* 。 peek: $,
<operator> := $* 。 peek: $id
<operator> := $* 。 peek: $num
<operator> := $* 。 peek: $(
<operator> := $* 。 peek: $)
}
ItemSet {
<operator> := $+ 。 peek: $,
<operator> := $+ 。 peek: $id
<operator> := $+ 。 peek: $num
<operator> := $+ 。 peek: $(
<operator> := $+ 。 peek: $)
}
ItemSet {
<operator> := $- 。 peek: $,
<operator> := $- 。 peek: $id
<operator> := $- 。 peek: $num
<operator> := $- 。 peek: $(
<operator> := $- 。 peek: $)
}
ItemSet {
<operator> := $/ 。 peek: $,
<operator> := $/ 。 peek: $id
<operator> := $/ 。 peek: $num
<operator> := $/ 。 peek: $(
<operator> := $/ 。 peek: $)
}
ItemSet {
<operator> := $< 。 peek: $,
<operator> := $< 。 peek: $id
<operator> := $< 。 peek: $num
<operator> := $< 。 peek: $(
<operator> := $< 。 peek: $)
}
ItemSet {
<operator> := $> 。 peek: $,
<operator> := $> 。 peek: $id
<operator> := $> 。 peek: $num
<operator> := $> 。 peek: $(
<operator> := $> 。 peek: $)
}
ItemSet {
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $,
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> 。 peek: $,
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := <operator> 。 peek: $)
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $,
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := @empty 。 peek: $,
<arithmetic_expression> := @empty 。 peek: $)
}
ItemSet {
<jump_statement> := $break $; 。 peek: $double
<jump_statement> := $break $; 。 peek: $char
<jump_statement> := $break $; 。 peek: $int
<jump_statement> := $break $; 。 peek: $id
<jump_statement> := $break $; 。 peek: $;
<jump_statement> := $break $; 。 peek: $continue
<jump_statement> := $break $; 。 peek: $break
<jump_statement> := $break $; 。 peek: $return
<jump_statement> := $break $; 。 peek: $if
<jump_statement> := $break $; 。 peek: $while
<jump_statement> := $break $; 。 peek: $for
<jump_statement> := $break $; 。 peek: ${
<jump_statement> := $break $; 。 peek: $}
}
ItemSet {
<jump_statement> := $continue $; 。 peek: $double
<jump_statement> := $continue $; 。 peek: $char
<jump_statement> := $continue $; 。 peek: $int
<jump_statement> := $continue $; 。 peek: $id
<jump_statement> := $continue $; 。 peek: $;
<jump_statement> := $continue $; 。 peek: $continue
<jump_statement> := $continue $; 。 peek: $break
<jump_statement> := $continue $; 。 peek: $return
<jump_statement> := $continue $; 。 peek: $if
<jump_statement> := $continue $; 。 peek: $while
<jump_statement> := $continue $; 。 peek: $for
<jump_statement> := $continue $; 。 peek: ${
<jump_statement> := $continue $; 。 peek: $}
}
ItemSet {
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $num
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $(
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<assignment_operator> := $= 。 peek: $id
<assignment_operator> := $= 。 peek: $num
<assignment_operator> := $= 。 peek: $(
}
ItemSet {
<assignment_expression> := $id <assignment_operator> 。 <expression> peek: $,
<assignment_expression> := $id <assignment_operator> 。 <expression> peek: $;
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $}
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<primary_expression> := $( 。 <expression> $) peek: $+
<primary_expression> := $( 。 <expression> $) peek: $-
<primary_expression> := $( 。 <expression> $) peek: $*
<primary_expression> := $( 。 <expression> $) peek: $/
<primary_expression> := $( 。 <expression> $) peek: $%
<primary_expression> := $( 。 <expression> $) peek: $<
<primary_expression> := $( 。 <expression> $) peek: $>
<primary_expression> := $( 。 <expression> $) peek: $id
<primary_expression> := $( 。 <expression> $) peek: $num
<primary_expression> := $( 。 <expression> $) peek: $(
<primary_expression> := $( 。 <expression> $) peek: $;
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<primary_expression> := $id 。 peek: $+
<primary_expression> := $id 。 peek: $-
<primary_expression> := $id 。 peek: $*
<primary_expression> := $id 。 peek: $/
<primary_expression> := $id 。 peek: $%
<primary_expression> := $id 。 peek: $<
<primary_expression> := $id 。 peek: $>
<primary_expression> := $id 。 peek: $id
<primary_expression> := $id 。 peek: $num
<primary_expression> := $id 。 peek: $(
<primary_expression> := $id 。 peek: $;
}
ItemSet {
<primary_expression> := $num 。 peek: $+
<primary_expression> := $num 。 peek: $-
<primary_expression> := $num 。 peek: $*
<primary_expression> := $num 。 peek: $/
<primary_expression> := $num 。 peek: $%
<primary_expression> := $num 。 peek: $<
<primary_expression> := $num 。 peek: $>
<primary_expression> := $num 。 peek: $id
<primary_expression> := $num 。 peek: $num
<primary_expression> := $num 。 peek: $(
<primary_expression> := $num 。 peek: $;
}
ItemSet {
<expression> := <constant_expression> 。 peek: $;
}
ItemSet {
<jump_statement> := $return <expression> 。 $; peek: $double
<jump_statement> := $return <expression> 。 $; peek: $char
<jump_statement> := $return <expression> 。 $; peek: $int
<jump_statement> := $return <expression> 。 $; peek: $id
<jump_statement> := $return <expression> 。 $; peek: $;
<jump_statement> := $return <expression> 。 $; peek: $continue
<jump_statement> := $return <expression> 。 $; peek: $break
<jump_statement> := $return <expression> 。 $; peek: $return
<jump_statement> := $return <expression> 。 $; peek: $if
<jump_statement> := $return <expression> 。 $; peek: $while
<jump_statement> := $return <expression> 。 $; peek: $for
<jump_statement> := $return <expression> 。 $; peek: ${
<jump_statement> := $return <expression> 。 $; peek: $}
}
ItemSet {
<function_expression> := <function> 。 $id $( <expression_list> $) peek: $;
}
ItemSet {
<expression> := <function_expression> 。 peek: $;
}
ItemSet {
<constant_expression> := <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $double
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $char
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $int
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $id
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $;
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $continue
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $break
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $return
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $if
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $while
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $for
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: ${
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $}
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<compound_statement> := ${ <statement_list> 。 $} peek: $double
<compound_statement> := ${ <statement_list> 。 $} peek: $char
<compound_statement> := ${ <statement_list> 。 $} peek: $int
<compound_statement> := ${ <statement_list> 。 $} peek: $id
<compound_statement> := ${ <statement_list> 。 $} peek: $;
<compound_statement> := ${ <statement_list> 。 $} peek: $continue
<compound_statement> := ${ <statement_list> 。 $} peek: $break
<compound_statement> := ${ <statement_list> 。 $} peek: $return
<compound_statement> := ${ <statement_list> 。 $} peek: $if
<compound_statement> := ${ <statement_list> 。 $} peek: $while
<compound_statement> := ${ <statement_list> 。 $} peek: $for
<compound_statement> := ${ <statement_list> 。 $} peek: ${
<compound_statement> := ${ <statement_list> 。 $} peek: $}
}
ItemSet {
<assignment_expression_profix> := $, 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<assignment_expression_list> := <assignment_expression> <assignment_expression_profix> 。 peek: $;
}
ItemSet {
<assignment_expression_profix> := @empty 。 peek: $;
}
ItemSet {
<expression_statement> := <assignment_expression_list> $; 。 peek: $double
<expression_statement> := <assignment_expression_list> $; 。 peek: $char
<expression_statement> := <assignment_expression_list> $; 。 peek: $int
<expression_statement> := <assignment_expression_list> $; 。 peek: $id
<expression_statement> := <assignment_expression_list> $; 。 peek: $;
<expression_statement> := <assignment_expression_list> $; 。 peek: $continue
<expression_statement> := <assignment_expression_list> $; 。 peek: $break
<expression_statement> := <assignment_expression_list> $; 。 peek: $return
<expression_statement> := <assignment_expression_list> $; 。 peek: $if
<expression_statement> := <assignment_expression_list> $; 。 peek: $while
<expression_statement> := <assignment_expression_list> $; 。 peek: $for
<expression_statement> := <assignment_expression_list> $; 。 peek: ${
<expression_statement> := <assignment_expression_list> $; 。 peek: $}
}
ItemSet {
<statement_list> := <statement> <statement_list> 。 peek: $}
}
ItemSet {
<compound_statement> := ${ <statement_list> $} 。 peek: $double
<compound_statement> := ${ <statement_list> $} 。 peek: $char
<compound_statement> := ${ <statement_list> $} 。 peek: $int
<compound_statement> := ${ <statement_list> $} 。 peek: #
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $double
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $char
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $int
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $id
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $;
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $continue
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $break
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $return
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $if
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $while
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $for
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: ${
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $}
<declaration_init_list> := 。 $, <declaration_init> <declaration_init_list> peek: $;
<declaration_init_list> := 。 @empty peek: $;
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $)
}
ItemSet {
<primary_expression> := $( <expression> $) 。 peek: $+
<primary_expression> := $( <expression> $) 。 peek: $-
<primary_expression> := $( <expression> $) 。 peek: $*
<primary_expression> := $( <expression> $) 。 peek: $/
<primary_expression> := $( <expression> $) 。 peek: $%
<primary_expression> := $( <expression> $) 。 peek: $<
<primary_expression> := $( <expression> $) 。 peek: $>
<primary_expression> := $( <expression> $) 。 peek: $id
<primary_expression> := $( <expression> $) 。 peek: $num
<primary_expression> := $( <expression> $) 。 peek: $(
<primary_expression> := $( <expression> $) 。 peek: $,
<primary_expression> := $( <expression> $) 。 peek: $)
}
ItemSet {
<expression_profix> := $, <expression> 。 <expression_profix> peek: $)
<expression_profix> := 。 $, <expression> <expression_profix> peek: $)
<expression_profix> := 。 @empty peek: $)
}
ItemSet {
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $,
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $)
<expression_list> := 。 <expression> <expression_profix> peek: $)
<expression_list> := 。 @empty peek: $)
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $,
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> peek: $,
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $,
<arithmetic_expression> := 。 @empty peek: $,
<arithmetic_expression> := 。 <operator> peek: $)
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $)
<arithmetic_expression> := 。 @empty peek: $)
<operator> := 。 $+ peek: $,
<operator> := 。 $- peek: $,
<operator> := 。 $* peek: $,
<operator> := 。 $/ peek: $,
<operator> := 。 $% peek: $,
<operator> := 。 $< peek: $,
<operator> := 。 $> peek: $,
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
<operator> := 。 $+ peek: $)
<operator> := 。 $- peek: $)
<operator> := 。 $* peek: $)
<operator> := 。 $/ peek: $)
<operator> := 。 $% peek: $)
<operator> := 。 $< peek: $)
<operator> := 。 $> peek: $)
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $,
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $}
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $num
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $(
<declaration_init> := 。 $id <declaration_assign> peek: $,
<declaration_init> := 。 $id <declaration_assign> peek: $;
}
ItemSet {
<assignment_expression> := $id <assignment_operator> <expression> 。 peek: $,
<assignment_expression> := $id <assignment_operator> <expression> 。 peek: $;
}
ItemSet {
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $double
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $char
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $int
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $id
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $;
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $continue
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $break
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $return
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $if
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $while
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $for
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: ${
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $}
}
ItemSet {
<primary_expression> := $( <expression> 。 $) peek: $+
<primary_expression> := $( <expression> 。 $) peek: $-
<primary_expression> := $( <expression> 。 $) peek: $*
<primary_expression> := $( <expression> 。 $) peek: $/
<primary_expression> := $( <expression> 。 $) peek: $%
<primary_expression> := $( <expression> 。 $) peek: $<
<primary_expression> := $( <expression> 。 $) peek: $>
<primary_expression> := $( <expression> 。 $) peek: $id
<primary_expression> := $( <expression> 。 $) peek: $num
<primary_expression> := $( <expression> 。 $) peek: $(
<primary_expression> := $( <expression> 。 $) peek: $;
}
ItemSet {
<jump_statement> := $return <expression> $; 。 peek: $double
<jump_statement> := $return <expression> $; 。 peek: $char
<jump_statement> := $return <expression> $; 。 peek: $int
<jump_statement> := $return <expression> $; 。 peek: $id
<jump_statement> := $return <expression> $; 。 peek: $;
<jump_statement> := $return <expression> $; 。 peek: $continue
<jump_statement> := $return <expression> $; 。 peek: $break
<jump_statement> := $return <expression> $; 。 peek: $return
<jump_statement> := $return <expression> $; 。 peek: $if
<jump_statement> := $return <expression> $; 。 peek: $while
<jump_statement> := $return <expression> $; 。 peek: $for
<jump_statement> := $return <expression> $; 。 peek: ${
<jump_statement> := $return <expression> $; 。 peek: $}
}
ItemSet {
<function_expression> := <function> $id 。 $( <expression_list> $) peek: $;
}
ItemSet {
<operator> := $% 。 peek: $;
<operator> := $% 。 peek: $id
<operator> := $% 。 peek: $num
<operator> := $% 。 peek: $(
}
ItemSet {
<operator> := $* 。 peek: $;
<operator> := $* 。 peek: $id
<operator> := $* 。 peek: $num
<operator> := $* 。 peek: $(
}
ItemSet {
<operator> := $+ 。 peek: $;
<operator> := $+ 。 peek: $id
<operator> := $+ 。 peek: $num
<operator> := $+ 。 peek: $(
}
ItemSet {
<operator> := $- 。 peek: $;
<operator> := $- 。 peek: $id
<operator> := $- 。 peek: $num
<operator> := $- 。 peek: $(
}
ItemSet {
<operator> := $/ 。 peek: $;
<operator> := $/ 。 peek: $id
<operator> := $/ 。 peek: $num
<operator> := $/ 。 peek: $(
}
ItemSet {
<operator> := $< 。 peek: $;
<operator> := $< 。 peek: $id
<operator> := $< 。 peek: $num
<operator> := $< 。 peek: $(
}
ItemSet {
<operator> := $> 。 peek: $;
<operator> := $> 。 peek: $id
<operator> := $> 。 peek: $num
<operator> := $> 。 peek: $(
}
ItemSet {
<constant_expression> := <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<arithmetic_expression> := <operator> 。 peek: $;
<arithmetic_expression> := <operator> 。 <primary_expression> <arithmetic_expression> peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<arithmetic_expression> := <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<arithmetic_expression> := @empty 。 peek: $;
}
ItemSet {
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $double
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $char
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $int
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $id
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $;
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $continue
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $break
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $return
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $if
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $while
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $for
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: ${
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $}
}
ItemSet {
<compound_statement> := ${ <statement_list> $} 。 peek: $double
<compound_statement> := ${ <statement_list> $} 。 peek: $char
<compound_statement> := ${ <statement_list> $} 。 peek: $int
<compound_statement> := ${ <statement_list> $} 。 peek: $id
<compound_statement> := ${ <statement_list> $} 。 peek: $;
<compound_statement> := ${ <statement_list> $} 。 peek: $continue
<compound_statement> := ${ <statement_list> $} 。 peek: $break
<compound_statement> := ${ <statement_list> $} 。 peek: $return
<compound_statement> := ${ <statement_list> $} 。 peek: $if
<compound_statement> := ${ <statement_list> $} 。 peek: $while
<compound_statement> := ${ <statement_list> $} 。 peek: $for
<compound_statement> := ${ <statement_list> $} 。 peek: ${
<compound_statement> := ${ <statement_list> $} 。 peek: $}
}
ItemSet {
<assignment_expression_profix> := $, <assignment_expression> 。 <assignment_expression_profix> peek: $;
<assignment_expression_profix> := 。 $, <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_profix> := 。 @empty peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $double
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $char
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $int
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $id
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $;
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $continue
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $break
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $return
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $if
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $while
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $for
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: ${
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $}
}
ItemSet {
<expression_profix> := $, <expression> <expression_profix> 。 peek: $)
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $,
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $,
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $)
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $}
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $id
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $num
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $(
<declaration_init_list> := 。 $, <declaration_init> <declaration_init_list> peek: $;
<declaration_init_list> := 。 @empty peek: $;
}
ItemSet {
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $double
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $char
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $int
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $id
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $;
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $continue
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $break
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $return
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $if
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $while
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $for
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: ${
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $}
<statement> := 。 <expression_statement> peek: $else
<statement> := 。 <jump_statement> peek: $else
<statement> := 。 <selection_statement> peek: $else
<statement> := 。 <iteration_statement> peek: $else
<statement> := 。 <compound_statement> peek: $else
<statement> := 。 <declaration> peek: $else
<expression_statement> := 。 <assignment_expression_list> $; peek: $else
<jump_statement> := 。 $continue $; peek: $else
<jump_statement> := 。 $break $; peek: $else
<jump_statement> := 。 $return <expression> $; peek: $else
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $else
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $else
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<compound_statement> := 。 ${ <statement_list> $} peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $else
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<primary_expression> := $( <expression> $) 。 peek: $+
<primary_expression> := $( <expression> $) 。 peek: $-
<primary_expression> := $( <expression> $) 。 peek: $*
<primary_expression> := $( <expression> $) 。 peek: $/
<primary_expression> := $( <expression> $) 。 peek: $%
<primary_expression> := $( <expression> $) 。 peek: $<
<primary_expression> := $( <expression> $) 。 peek: $>
<primary_expression> := $( <expression> $) 。 peek: $id
<primary_expression> := $( <expression> $) 。 peek: $num
<primary_expression> := $( <expression> $) 。 peek: $(
<primary_expression> := $( <expression> $) 。 peek: $;
}
ItemSet {
<function_expression> := <function> $id $( 。 <expression_list> $) peek: $;
<expression_list> := 。 <expression> <expression_profix> peek: $)
<expression_list> := 。 @empty peek: $)
<expression> := 。 <constant_expression> peek: $,
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $,
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $,
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $,
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $,
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $,
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $,
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> 。 <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> peek: $;
<arithmetic_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 <operator> <primary_expression> <arithmetic_expression> peek: $;
<arithmetic_expression> := 。 @empty peek: $;
<operator> := 。 $+ peek: $;
<operator> := 。 $- peek: $;
<operator> := 。 $* peek: $;
<operator> := 。 $/ peek: $;
<operator> := 。 $% peek: $;
<operator> := 。 $< peek: $;
<operator> := 。 $> peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
<operator> := 。 $+ peek: $id
<operator> := 。 $+ peek: $num
<operator> := 。 $+ peek: $(
<operator> := 。 $- peek: $id
<operator> := 。 $- peek: $num
<operator> := 。 $- peek: $(
<operator> := 。 $* peek: $id
<operator> := 。 $* peek: $num
<operator> := 。 $* peek: $(
<operator> := 。 $/ peek: $id
<operator> := 。 $/ peek: $num
<operator> := 。 $/ peek: $(
<operator> := 。 $% peek: $id
<operator> := 。 $% peek: $num
<operator> := 。 $% peek: $(
<operator> := 。 $< peek: $id
<operator> := 。 $< peek: $num
<operator> := 。 $< peek: $(
<operator> := 。 $> peek: $id
<operator> := 。 $> peek: $num
<operator> := 。 $> peek: $(
}
ItemSet {
<arithmetic_expression> := <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $double
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $char
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $int
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $id
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $;
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $continue
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $break
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $return
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $if
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $while
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $for
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: ${
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <declaration> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <declaration> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <declaration> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <declaration> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <declaration> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <declaration> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <declaration> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <declaration> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <declaration> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <declaration> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <declaration> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<assignment_expression_profix> := $, <assignment_expression> <assignment_expression_profix> 。 peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $double
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $char
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $int
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $id
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $;
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $continue
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $break
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $return
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $if
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $while
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $for
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: ${
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $}
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $,
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $)
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $double
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $char
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $int
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $id
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $;
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $break
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $return
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $if
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $while
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $for
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: ${
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $}
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $)
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $id
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $num
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $(
}
ItemSet {
<jump_statement> := $break 。 $; peek: $else
}
ItemSet {
<jump_statement> := $continue 。 $; peek: $else
}
ItemSet {
<iteration_statement> := $for 。 $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
}
ItemSet {
<selection_statement> := $if 。 $( <expression> $) <statement> $else <statement> peek: $else
}
ItemSet {
<jump_statement> := $return 。 <expression> $; peek: $else
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<iteration_statement> := $while 。 $( <expression> $) <statement> peek: $else
}
ItemSet {
<compound_statement> := ${ 。 <statement_list> $} peek: $else
<statement_list> := 。 <statement> <statement_list> peek: $}
<statement_list> := 。 @empty peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $double
<statement> := 。 <declaration> peek: $char
<statement> := 。 <declaration> peek: $int
<statement> := 。 <declaration> peek: $id
<statement> := 。 <declaration> peek: $;
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <declaration> peek: $break
<statement> := 。 <declaration> peek: $return
<statement> := 。 <declaration> peek: $if
<statement> := 。 <declaration> peek: $while
<statement> := 。 <declaration> peek: $for
<statement> := 。 <declaration> peek: ${
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<expression_statement> := <assignment_expression_list> 。 $; peek: $else
}
ItemSet {
<statement> := <compound_statement> 。 peek: $else
}
ItemSet {
<statement> := <declaration> 。 peek: $else
}
ItemSet {
<statement> := <expression_statement> 。 peek: $else
}
ItemSet {
<statement> := <iteration_statement> 。 peek: $else
}
ItemSet {
<statement> := <jump_statement> 。 peek: $else
}
ItemSet {
<statement> := <selection_statement> 。 peek: $else
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $double
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $char
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $int
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $id
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $;
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $continue
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $break
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $return
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $if
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $while
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $for
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: ${
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $}
}
ItemSet {
<declaration> := <type_specifier> 。 <declaration_init> <declaration_init_list> $; peek: $else
<declaration_init> := 。 $id <declaration_assign> peek: $,
<declaration_init> := 。 $id <declaration_assign> peek: $;
}
ItemSet {
<assignment_expression_list> := @empty 。 peek: $;
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> 。 $) peek: $;
}
ItemSet {
<arithmetic_expression> := <operator> <primary_expression> <arithmetic_expression> 。 peek: $;
}
ItemSet {
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $double
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $char
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $int
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $id
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $;
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $continue
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $break
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $return
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $if
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $while
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $for
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: ${
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $}
}
ItemSet {
<assignment_expression> := $id 。 <assignment_operator> <expression> peek: $)
<assignment_operator> := 。 $= peek: $id
<assignment_operator> := 。 $= peek: $num
<assignment_operator> := 。 $= peek: $(
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $double
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $char
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $int
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $id
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $;
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $continue
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $break
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $return
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $if
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $while
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $for
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: ${
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $}
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $id
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $num
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $(
}
ItemSet {
<jump_statement> := $break $; 。 peek: $else
}
ItemSet {
<jump_statement> := $continue $; 。 peek: $else
}
ItemSet {
<iteration_statement> := $for $( 。 <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $num
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $(
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
}
ItemSet {
<selection_statement> := $if $( 。 <expression> $) <statement> $else <statement> peek: $else
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<jump_statement> := $return <expression> 。 $; peek: $else
}
ItemSet {
<iteration_statement> := $while $( 。 <expression> $) <statement> peek: $else
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<compound_statement> := ${ <statement_list> 。 $} peek: $else
}
ItemSet {
<expression_statement> := <assignment_expression_list> $; 。 peek: $else
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $double
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $char
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $int
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $id
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $;
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $continue
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $break
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $return
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $if
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $while
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $for
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: ${
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <declaration> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <declaration> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <declaration> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <declaration> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <declaration> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <declaration> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <declaration> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <declaration> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <declaration> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <declaration> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <declaration> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> 。 <declaration_init_list> $; peek: $else
<declaration_init_list> := 。 $, <declaration_init> <declaration_init_list> peek: $;
<declaration_init_list> := 。 @empty peek: $;
}
ItemSet {
<function_expression> := <function> $id $( <expression_list> $) 。 peek: $;
}
ItemSet {
<assignment_expression> := $id <assignment_operator> 。 <expression> peek: $)
<expression> := 。 <constant_expression> peek: $)
<expression> := 。 <function_expression> peek: $)
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $)
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $)
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $)
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $)
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $)
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $double
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $char
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $int
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $id
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $;
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $continue
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $break
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $return
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $if
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $while
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $for
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: ${
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $}
<statement> := 。 <expression_statement> peek: $double
<statement> := 。 <jump_statement> peek: $double
<statement> := 。 <selection_statement> peek: $double
<statement> := 。 <iteration_statement> peek: $double
<statement> := 。 <compound_statement> peek: $double
<statement> := 。 <declaration> peek: $double
<statement> := 。 <expression_statement> peek: $char
<statement> := 。 <jump_statement> peek: $char
<statement> := 。 <selection_statement> peek: $char
<statement> := 。 <iteration_statement> peek: $char
<statement> := 。 <compound_statement> peek: $char
<statement> := 。 <declaration> peek: $char
<statement> := 。 <expression_statement> peek: $int
<statement> := 。 <jump_statement> peek: $int
<statement> := 。 <selection_statement> peek: $int
<statement> := 。 <iteration_statement> peek: $int
<statement> := 。 <compound_statement> peek: $int
<statement> := 。 <declaration> peek: $int
<statement> := 。 <expression_statement> peek: $id
<statement> := 。 <jump_statement> peek: $id
<statement> := 。 <selection_statement> peek: $id
<statement> := 。 <iteration_statement> peek: $id
<statement> := 。 <compound_statement> peek: $id
<statement> := 。 <declaration> peek: $id
<statement> := 。 <expression_statement> peek: $;
<statement> := 。 <jump_statement> peek: $;
<statement> := 。 <selection_statement> peek: $;
<statement> := 。 <iteration_statement> peek: $;
<statement> := 。 <compound_statement> peek: $;
<statement> := 。 <declaration> peek: $;
<statement> := 。 <expression_statement> peek: $continue
<statement> := 。 <jump_statement> peek: $continue
<statement> := 。 <selection_statement> peek: $continue
<statement> := 。 <iteration_statement> peek: $continue
<statement> := 。 <compound_statement> peek: $continue
<statement> := 。 <declaration> peek: $continue
<statement> := 。 <expression_statement> peek: $break
<statement> := 。 <jump_statement> peek: $break
<statement> := 。 <selection_statement> peek: $break
<statement> := 。 <iteration_statement> peek: $break
<statement> := 。 <compound_statement> peek: $break
<statement> := 。 <declaration> peek: $break
<statement> := 。 <expression_statement> peek: $return
<statement> := 。 <jump_statement> peek: $return
<statement> := 。 <selection_statement> peek: $return
<statement> := 。 <iteration_statement> peek: $return
<statement> := 。 <compound_statement> peek: $return
<statement> := 。 <declaration> peek: $return
<statement> := 。 <expression_statement> peek: $if
<statement> := 。 <jump_statement> peek: $if
<statement> := 。 <selection_statement> peek: $if
<statement> := 。 <iteration_statement> peek: $if
<statement> := 。 <compound_statement> peek: $if
<statement> := 。 <declaration> peek: $if
<statement> := 。 <expression_statement> peek: $while
<statement> := 。 <jump_statement> peek: $while
<statement> := 。 <selection_statement> peek: $while
<statement> := 。 <iteration_statement> peek: $while
<statement> := 。 <compound_statement> peek: $while
<statement> := 。 <declaration> peek: $while
<statement> := 。 <expression_statement> peek: $for
<statement> := 。 <jump_statement> peek: $for
<statement> := 。 <selection_statement> peek: $for
<statement> := 。 <iteration_statement> peek: $for
<statement> := 。 <compound_statement> peek: $for
<statement> := 。 <declaration> peek: $for
<statement> := 。 <expression_statement> peek: ${
<statement> := 。 <jump_statement> peek: ${
<statement> := 。 <selection_statement> peek: ${
<statement> := 。 <iteration_statement> peek: ${
<statement> := 。 <compound_statement> peek: ${
<statement> := 。 <declaration> peek: ${
<statement> := 。 <expression_statement> peek: $}
<statement> := 。 <jump_statement> peek: $}
<statement> := 。 <selection_statement> peek: $}
<statement> := 。 <iteration_statement> peek: $}
<statement> := 。 <compound_statement> peek: $}
<statement> := 。 <declaration> peek: $}
<expression_statement> := 。 <assignment_expression_list> $; peek: $double
<jump_statement> := 。 $continue $; peek: $double
<jump_statement> := 。 $break $; peek: $double
<jump_statement> := 。 $return <expression> $; peek: $double
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $double
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $double
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $double
<compound_statement> := 。 ${ <statement_list> $} peek: $double
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $double
<expression_statement> := 。 <assignment_expression_list> $; peek: $char
<jump_statement> := 。 $continue $; peek: $char
<jump_statement> := 。 $break $; peek: $char
<jump_statement> := 。 $return <expression> $; peek: $char
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $char
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $char
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $char
<compound_statement> := 。 ${ <statement_list> $} peek: $char
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $char
<expression_statement> := 。 <assignment_expression_list> $; peek: $int
<jump_statement> := 。 $continue $; peek: $int
<jump_statement> := 。 $break $; peek: $int
<jump_statement> := 。 $return <expression> $; peek: $int
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $int
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $int
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $int
<compound_statement> := 。 ${ <statement_list> $} peek: $int
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $int
<expression_statement> := 。 <assignment_expression_list> $; peek: $id
<jump_statement> := 。 $continue $; peek: $id
<jump_statement> := 。 $break $; peek: $id
<jump_statement> := 。 $return <expression> $; peek: $id
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $id
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $id
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $id
<compound_statement> := 。 ${ <statement_list> $} peek: $id
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $id
<expression_statement> := 。 <assignment_expression_list> $; peek: $;
<jump_statement> := 。 $continue $; peek: $;
<jump_statement> := 。 $break $; peek: $;
<jump_statement> := 。 $return <expression> $; peek: $;
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $;
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $;
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $;
<compound_statement> := 。 ${ <statement_list> $} peek: $;
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $;
<expression_statement> := 。 <assignment_expression_list> $; peek: $continue
<jump_statement> := 。 $continue $; peek: $continue
<jump_statement> := 。 $break $; peek: $continue
<jump_statement> := 。 $return <expression> $; peek: $continue
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $continue
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $continue
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $continue
<compound_statement> := 。 ${ <statement_list> $} peek: $continue
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $continue
<expression_statement> := 。 <assignment_expression_list> $; peek: $break
<jump_statement> := 。 $continue $; peek: $break
<jump_statement> := 。 $break $; peek: $break
<jump_statement> := 。 $return <expression> $; peek: $break
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $break
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $break
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $break
<compound_statement> := 。 ${ <statement_list> $} peek: $break
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $break
<expression_statement> := 。 <assignment_expression_list> $; peek: $return
<jump_statement> := 。 $continue $; peek: $return
<jump_statement> := 。 $break $; peek: $return
<jump_statement> := 。 $return <expression> $; peek: $return
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $return
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $return
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $return
<compound_statement> := 。 ${ <statement_list> $} peek: $return
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $return
<expression_statement> := 。 <assignment_expression_list> $; peek: $if
<jump_statement> := 。 $continue $; peek: $if
<jump_statement> := 。 $break $; peek: $if
<jump_statement> := 。 $return <expression> $; peek: $if
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $if
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $if
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $if
<compound_statement> := 。 ${ <statement_list> $} peek: $if
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $if
<expression_statement> := 。 <assignment_expression_list> $; peek: $while
<jump_statement> := 。 $continue $; peek: $while
<jump_statement> := 。 $break $; peek: $while
<jump_statement> := 。 $return <expression> $; peek: $while
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $while
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $while
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $while
<compound_statement> := 。 ${ <statement_list> $} peek: $while
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $while
<expression_statement> := 。 <assignment_expression_list> $; peek: $for
<jump_statement> := 。 $continue $; peek: $for
<jump_statement> := 。 $break $; peek: $for
<jump_statement> := 。 $return <expression> $; peek: $for
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $for
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $for
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $for
<compound_statement> := 。 ${ <statement_list> $} peek: $for
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $for
<expression_statement> := 。 <assignment_expression_list> $; peek: ${
<jump_statement> := 。 $continue $; peek: ${
<jump_statement> := 。 $break $; peek: ${
<jump_statement> := 。 $return <expression> $; peek: ${
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: ${
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: ${
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: ${
<compound_statement> := 。 ${ <statement_list> $} peek: ${
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: ${
<expression_statement> := 。 <assignment_expression_list> $; peek: $}
<jump_statement> := 。 $continue $; peek: $}
<jump_statement> := 。 $break $; peek: $}
<jump_statement> := 。 $return <expression> $; peek: $}
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $}
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $}
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $}
<compound_statement> := 。 ${ <statement_list> $} peek: $}
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $}
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<iteration_statement> := $for $( <declaration> 。 <expression> $; <assignment_expression> $) <statement> peek: $else
<expression> := 。 <constant_expression> peek: $;
<expression> := 。 <function_expression> peek: $;
<constant_expression> := 。 <primary_expression> <arithmetic_expression> peek: $;
<function_expression> := 。 <function> $id $( <expression_list> $) peek: $;
<primary_expression> := 。 $id peek: $+
<primary_expression> := 。 $id peek: $-
<primary_expression> := 。 $id peek: $*
<primary_expression> := 。 $id peek: $/
<primary_expression> := 。 $id peek: $%
<primary_expression> := 。 $id peek: $<
<primary_expression> := 。 $id peek: $>
<primary_expression> := 。 $id peek: $id
<primary_expression> := 。 $id peek: $num
<primary_expression> := 。 $id peek: $(
<primary_expression> := 。 $id peek: $;
<primary_expression> := 。 $num peek: $+
<primary_expression> := 。 $num peek: $-
<primary_expression> := 。 $num peek: $*
<primary_expression> := 。 $num peek: $/
<primary_expression> := 。 $num peek: $%
<primary_expression> := 。 $num peek: $<
<primary_expression> := 。 $num peek: $>
<primary_expression> := 。 $num peek: $id
<primary_expression> := 。 $num peek: $num
<primary_expression> := 。 $num peek: $(
<primary_expression> := 。 $num peek: $;
<primary_expression> := 。 $( <expression> $) peek: $+
<primary_expression> := 。 $( <expression> $) peek: $-
<primary_expression> := 。 $( <expression> $) peek: $*
<primary_expression> := 。 $( <expression> $) peek: $/
<primary_expression> := 。 $( <expression> $) peek: $%
<primary_expression> := 。 $( <expression> $) peek: $<
<primary_expression> := 。 $( <expression> $) peek: $>
<primary_expression> := 。 $( <expression> $) peek: $id
<primary_expression> := 。 $( <expression> $) peek: $num
<primary_expression> := 。 $( <expression> $) peek: $(
<primary_expression> := 。 $( <expression> $) peek: $;
}
ItemSet {
<selection_statement> := $if $( <expression> 。 $) <statement> $else <statement> peek: $else
}
ItemSet {
<jump_statement> := $return <expression> $; 。 peek: $else
}
ItemSet {
<iteration_statement> := $while $( <expression> 。 $) <statement> peek: $else
}
ItemSet {
<compound_statement> := ${ <statement_list> $} 。 peek: $else
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $double
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $char
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $int
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $id
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $;
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $continue
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $break
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $return
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $if
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $while
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $for
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: ${
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $}
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> 。 $; peek: $else
}
ItemSet {
<assignment_expression> := $id <assignment_operator> <expression> 。 peek: $)
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $double
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $char
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $int
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $id
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $;
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $continue
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $break
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $return
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $if
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $while
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $for
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: ${
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $}
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> 。 $; <assignment_expression> $) <statement> peek: $else
}
ItemSet {
<selection_statement> := $if $( <expression> $) 。 <statement> $else <statement> peek: $else
<statement> := 。 <expression_statement> peek: $else
<statement> := 。 <jump_statement> peek: $else
<statement> := 。 <selection_statement> peek: $else
<statement> := 。 <iteration_statement> peek: $else
<statement> := 。 <compound_statement> peek: $else
<statement> := 。 <declaration> peek: $else
<expression_statement> := 。 <assignment_expression_list> $; peek: $else
<jump_statement> := 。 $continue $; peek: $else
<jump_statement> := 。 $break $; peek: $else
<jump_statement> := 。 $return <expression> $; peek: $else
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $else
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $else
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<compound_statement> := 。 ${ <statement_list> $} peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $else
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<iteration_statement> := $while $( <expression> $) 。 <statement> peek: $else
<statement> := 。 <expression_statement> peek: $else
<statement> := 。 <jump_statement> peek: $else
<statement> := 。 <selection_statement> peek: $else
<statement> := 。 <iteration_statement> peek: $else
<statement> := 。 <compound_statement> peek: $else
<statement> := 。 <declaration> peek: $else
<expression_statement> := 。 <assignment_expression_list> $; peek: $else
<jump_statement> := 。 $continue $; peek: $else
<jump_statement> := 。 $break $; peek: $else
<jump_statement> := 。 $return <expression> $; peek: $else
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $else
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $else
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<compound_statement> := 。 ${ <statement_list> $} peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $else
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<declaration> := <type_specifier> <declaration_init> <declaration_init_list> $; 。 peek: $else
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; 。 <assignment_expression> $) <statement> peek: $else
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $)
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> 。 $else <statement> peek: $else
}
ItemSet {
<iteration_statement> := $while $( <expression> $) <statement> 。 peek: $else
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> 。 $) <statement> peek: $else
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> $else 。 <statement> peek: $else
<statement> := 。 <expression_statement> peek: $else
<statement> := 。 <jump_statement> peek: $else
<statement> := 。 <selection_statement> peek: $else
<statement> := 。 <iteration_statement> peek: $else
<statement> := 。 <compound_statement> peek: $else
<statement> := 。 <declaration> peek: $else
<expression_statement> := 。 <assignment_expression_list> $; peek: $else
<jump_statement> := 。 $continue $; peek: $else
<jump_statement> := 。 $break $; peek: $else
<jump_statement> := 。 $return <expression> $; peek: $else
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $else
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $else
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<compound_statement> := 。 ${ <statement_list> $} peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $else
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) 。 <statement> peek: $else
<statement> := 。 <expression_statement> peek: $else
<statement> := 。 <jump_statement> peek: $else
<statement> := 。 <selection_statement> peek: $else
<statement> := 。 <iteration_statement> peek: $else
<statement> := 。 <compound_statement> peek: $else
<statement> := 。 <declaration> peek: $else
<expression_statement> := 。 <assignment_expression_list> $; peek: $else
<jump_statement> := 。 $continue $; peek: $else
<jump_statement> := 。 $break $; peek: $else
<jump_statement> := 。 $return <expression> $; peek: $else
<selection_statement> := 。 $if $( <expression> $) <statement> $else <statement> peek: $else
<iteration_statement> := 。 $while $( <expression> $) <statement> peek: $else
<iteration_statement> := 。 $for $( <declaration> <expression> $; <assignment_expression> $) <statement> peek: $else
<compound_statement> := 。 ${ <statement_list> $} peek: $else
<declaration> := 。 <type_specifier> <declaration_init> <declaration_init_list> $; peek: $else
<assignment_expression_list> := 。 <assignment_expression> <assignment_expression_profix> peek: $;
<assignment_expression_list> := 。 @empty peek: $;
<type_specifier> := 。 $double peek: $id
<type_specifier> := 。 $char peek: $id
<type_specifier> := 。 $int peek: $id
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $,
<assignment_expression> := 。 $id <assignment_operator> <expression> peek: $;
}
ItemSet {
<selection_statement> := $if $( <expression> $) <statement> $else <statement> 。 peek: $else
}
ItemSet {
<iteration_statement> := $for $( <declaration> <expression> $; <assignment_expression> $) <statement> 。 peek: $else
}
